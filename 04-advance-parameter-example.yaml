Parameters:
  SecurityGroupDescription:
    Description: Security Group Description (Simple Parameter example)
    Type: String

  SecurityGroupPort:
    Type: Number
    MinValue: 1150
    MaxValue: 10000

  InstanceType:
    Type: String
    Default: t2.nano
    AllowedValues:
      - "t2.nano"
      - "t2.micro"
      - "t2.small"
    ConstraintDescription: Only allowed valid aws instances type

  MyImageID:
    Description: SSM parameter This will auto gives the latest image id based on the os and region use aws public parameter
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2  

  DBpwd:
    Type: String
    NoEcho: true
    Description: This can be used for the because, as this not echo

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be existing keyname
    Description: This key should exists to enter during stack creation

  SecurityGroupIngresCidr:
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be valid IP Cidr range

  MyVpc:
    Description: VPC to operate in
    Type: AWS::EC2::VPC::Id

  DBSubnetIPBlocks:
    Description: Comma delimited list
    Type: CommaDelimitedList
    Default: "10.0.48.0/24, 10.0.112.0/24, 10.0.176.0/24"

Resources:
  MyEC2Instances:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref MyImageID
      KeyName: !Ref KeyName
      SubnetId: !Ref DbSubnet1

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: This example of security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          ToPort: !Ref SecurityGroupPort
          FromPort: !Ref SecurityGroupPort
          CidrIp: !Ref SecurityGroupIngresCidr
      VpcId: !Ref MyVpc

  DbSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: !Select [0, !Ref DBSubnetIPBlocks]

  DbSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: !Select [1, !Ref DBSubnetIPBlocks]    

  DbSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: !Select [2, !Ref DBSubnetIPBlocks]    



